---
import type { CollectionEntry } from "astro:content";

import { render } from "astro:content";

import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Tag from '../components/Tag.astro';
import getFormatDay from '../utils/getFormatDay.ts';

type Props = {
  entry: CollectionEntry<'blog'>;
	prevArticle?: CollectionEntry<'blog'>;
	nextArticle?: CollectionEntry<'blog'>;
};

const { entry, prevArticle, nextArticle } = Astro.props;
const { title, description, pubDate, heroImage, tags } = entry.data;
const { headings } = await render(entry);
const { id } = entry;

const pageKind = 'Blog'
---

<html lang="ja">
	<head>
		<BaseHead title={title} description={description} url={`/blog/${id}`} image={heroImage} />
		<style>
			.title {
				margin: 0.25rem 0 0;
			}
			.metaData {
        font-family: 'Quicksand';
				font-size: 1rem;
        margin-top: 0.5rem;
        display: flex;
      }
      #tag {
        margin-left: 16px;
      }
			.metaData time {
				flex: 0 0 130px;
				vertical-align: middle;
			}
			.toc {
				border-radius: 10px;
				border: 2px solid var(--text-color);
				padding: 0.5rem 1rem;
				margin: 2rem 0;
			}
			.suggestArticle {
				display: flex;
				justify-content: space-between;
				margin-top: 2rem;
				flex-wrap: wrap;
			}
			.prevNextArticle {
				width: 300px;
				padding: 10px;
				line-height: 2;
				margin-bottom: 2rem;
				display: inline;
			}
			.icon {
        display: inline-block;
        width: 1em;
        height: 1em;
        fill: var(--text-color);
        vertical-align: middle;
  		}
		</style>
	</head>

	<body>
		<Header pageKind={pageKind} />
		<main>
			<article>
				<h1 class="title">{title}</h1>
				<div class="metaData">
					<div>
            <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M96 32l0 32L48 64C21.5 64 0 85.5 0 112l0 48 448 0 0-48c0-26.5-21.5-48-48-48l-48 0 0-32c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 32L160 64l0-32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192L0 192 0 464c0 26.5 21.5 48 48 48l352 0c26.5 0 48-21.5 48-48l0-272z"/></svg>
						<time datetime={pubDate.toString()}>
							{getFormatDay(pubDate)}
						</time>
					</div>
					<div id="tag">
            <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><!--!Font Awesome Free 6.7.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M0 80L0 229.5c0 17 6.7 33.3 18.7 45.3l176 176c25 25 65.5 25 90.5 0L418.7 317.3c25-25 25-65.5 0-90.5l-176-176c-12-12-28.3-18.7-45.3-18.7L48 32C21.5 32 0 53.5 0 80zm112 32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z"/></svg>
						{tags.map((tag) => (
							<Tag tag={tag} />
						))}
					</div>
				</div>
				<div class="toc">
					<h2>目次</h2>
					<ul>
						{headings.filter(heading => heading.depth < 3).map((heading) => (
							<li>
								<a href={`#${heading.slug}`}>{heading.text}</a>
							</li>
						))}
					</ul>
				</div>
				{heroImage && <img width={1080} height={540} src={heroImage} alt="" />}
				<slot />
			</article>
			<hr />
			<div class="suggestArticle">
				<div class="prevNextArticle">
					{(prevArticle === undefined)
						? undefined
						: <p>前の記事</p><a href={`/blog/${prevArticle.id}`}>{prevArticle.data.title}</a>
					}
				</div>
				<div class="prevNextArticle">
					{(nextArticle === undefined)
						? undefined
						: <p>次の記事</p><a href={`/blog/${nextArticle.id}`}>{nextArticle.data.title}</a>
					}
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>
