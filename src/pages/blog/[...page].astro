---
import type { GetStaticPathsOptions, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Pagination from '../../components/Pagination.astro';
import Tag from '../../components/Tag.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../config';

type Props = {
  page: Page<CollectionEntry<'blog'>>;
};

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection('blog');
  const allPostsSorted = allPosts.sort(
    (a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  )
  return paginate(allPostsSorted, { pageSize: 7 });
}

const { page } = Astro.props
const { start, end, total, data, currentPage, lastPage } = page
const pageKind = 'üìù Blog'
---

<!DOCTYPE html>
<html lang="ja">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} url="/" image="/icon.jpeg" />
		<style>
			ul {
				list-style-type: none;
				padding: unset;
			}
      ul li {
        margin-bottom: 2em;
      }
      .title a {
        color: #030302;
      }
      .metaData {
        font-family: 'Quicksand';
        font-size: 0.75em;
        margin-top: 8px;
        display: flex;
      }
      #tag {
        margin-left: 16px;
      }
			ul li time {
				flex: 0 0 130px;
				color: #23221e;
			}

		</style>
	</head>
	<body>
		<Header pageKind={pageKind} />
		<main>
      <h1>
        {pageKind}
      </h1>
			<section>
				<ul>
					{
						page.data.map(({ data, slug }) => (
							<li>
                <h2>
								<div class="title">
								  <a href={`/blog/${slug}`}>{data.title}</a>
                </div>
                <div class="metaData">
                  <div id="datetime">
                    <i class="fa-regular fa-calendar"></i>
                    <time datetime={data.pubDate}>
                      {new Date(data.pubDate).toLocaleDateString('en-us', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric',
                      })}
                    </time>
                    </div>
                  <div id="tag">
                    <i class="fa-solid fa-tag"></i>
                    {data.tags.map((tag) => (
                      <Tag tag={tag} />
                    ))}
                  </div>
                  </h2>
                </div>
							</li>
						))
					}
				</ul>
			</section>
      <Pagination currentPage={currentPage} lastPage={lastPage} page={page} />
		</main>
		<Footer />
	</body>
</html>