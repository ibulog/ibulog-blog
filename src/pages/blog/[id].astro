---
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from 'astro:content';
import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';
import sortArticleByDate from "../../utils/sortArticleByDate.ts";

type Props = {
  entry: CollectionEntry<'blog'>;
  prevArticle?: CollectionEntry<'blog'>
  nextArticle?: CollectionEntry<'blog'>
};

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  const articleNumber = blogEntries.length;

  return blogEntries.sort(sortArticleByDate).map((entry, i) => ({
    params: { id: entry.id },
    props: {
      entry,
      prevArticle: i === 0 ? undefined : blogEntries[i - 1],
      nextArticle: i + 1 === articleNumber ? undefined : blogEntries[i + 1],
    }
  }));
}

const { entry, prevArticle, nextArticle } = Astro.props;
const { Content } = await render(entry);
---
<MarkdownPostLayout entry={entry} prevArticle={prevArticle} nextArticle={nextArticle}>
  <Content />
</MarkdownPostLayout>